plugins {
    id 'com.github.kt3k.coveralls' version '2.12.0'
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'
apply plugin: "de.mannodermaus.android-junit5"

group = 'com.ncapdevi'
version = '3.4.0'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 30
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
        }
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "androidx.fragment:fragment:1.4.1"
    implementation "androidx.annotation:annotation:1.3.0"

    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0"
    testImplementation "org.robolectric:robolectric:4.2"

    testImplementation 'org.amshove.kluent:kluent-android:1.65'

    // Spek
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
}

afterEvaluate {
    publishing {
        publications {
            aar(MavenPublication) {
                from components.release
                version = project.version

                pom {
                    name = 'FragNav'
                    description = 'A library to help manage multiple fragment stacks'
                    url = 'https://github.com/ncapdevi/FragNav'
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'ncapdevi'
                            name = 'Nic Capdevila'
                            email = 'ncapdevi@gmail.com'
                        }
                    }
                }
            }
        }
    }

    publishing {
        repositories {
            maven {
                url = rootProject.properties['publishRepoUrl'].toString()
                name = "publishRepo"

                // https://docs.gradle.org/current/samples/sample_publishing_credentials.html
                credentials(PasswordCredentials)
            }
        }
    }
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoTestReportDebug/jacocoTestReportDebug.xml"
}

tasks.coveralls {
    dependsOn 'jacocoTestReportDebug'
    onlyIf { System.env.'CI' }
}